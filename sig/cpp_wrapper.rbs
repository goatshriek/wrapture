module Wrapture
  class CppWrapper
    def self.write_spec_files: ( (Wrapture::ClassSpec | Wrapture::EnumSpec | Wrapture::FunctionSpec | Wrapture::Scope) spec, ?String dir) -> Array[String]
    def initialize: ( (Wrapture::ClassSpec | Wrapture::EnumSpec | Wrapture::FunctionSpec | Wrapture::Scope) spec) -> void
    def ancestor_suffix: -> String
    def declare: { (String) -> void } -> void
    def define: { (String) -> void } -> void
    def header_guard: -> String
    def write_declaration_file: (?String dir) -> String
    def write_definition_file: (?String dir) -> String
    def write_files: (?String dir) -> Array[String]

    private
    def declare_class: (Wrapture::ClassSpec spec) { (String) -> void } -> void
    def declare_function: (Wrapture::FunctionSpec spec) { (String) -> void } -> void
    def define_class: (Wrapture::ClassSpec spec) { (String) -> void } -> void
    def define_enum: (Wrapture::EnumSpec spec) { (String) -> void } -> void
    def define_function: (Wrapture::FunctionSpec spec) { (String) -> void } -> void
  end
end
