module Wrapture
  class PythonWrapper
    def self.write_spec_setuptools_files: ( (Wrapture::ClassSpec | Wrapture::EnumSpec | Wrapture::FunctionSpec | Wrapture::Scope) spec, ?String dir) -> Array[String]
    def self.write_spec_source_files: ( (Wrapture::ClassSpec | Wrapture::EnumSpec | Wrapture::FunctionSpec | Wrapture::Scope) spec, ?String dir) -> Array[String]
    def initialize: ( (Wrapture::ClassSpec | Wrapture::EnumSpec | Wrapture::FunctionSpec | Wrapture::Scope) spec) -> void
    def write_setuptools_files: (?String dir) -> Array[String]
    def write_source_files: (?String dir) -> Array[String]

    private
    def add_scope_type_objects: { (String) -> void } -> void
    def define_module: { (String) -> void } -> void
    def scope_class_objects: { (String) -> void } -> void
    def scope_types_ready: { (String) -> void } -> void
  end
end