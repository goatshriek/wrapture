module Wrapture
  class WrappedFunctionSpec
    @spec: spec_hash
    @error_rules: untyped
    @error_action: untyped

    def self.normalize_spec_hash: (spec_hash spec) -> spec_hash
    def self.normalize_spec_hash!: (spec_hash spec) -> spec_hash
    def initialize: (untyped spec) -> void
    def call_from: (Wrapture::CppWrapper | Wrapture::PythonWrapper) -> String
    def error_check: (?return_val: String)  { (String) -> void } -> void
    def error_check?: -> bool
    def includes: -> Array[String]
    def libraries: -> Array[String]
    def return_val_type: -> untyped
    def use_return?: -> bool
  end
end
